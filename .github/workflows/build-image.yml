name: Build and Push Docker Image

on:
  push:
    branches: [ main ]
    paths: 
      - 'Dockerfile'
      - 'requirements.txt' 
      - 'test_connectivity.py'
      - '.github/workflows/build-image.yml'
  # Trigger on version tags (e.g., v1.0.0, v1.2.3)
  push:
    tags:
      - 'v*.*.*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: davidpacold/connectivity-tester

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          # Always tag as latest when pushing to main
          type=raw,value=latest,enable={{is_default_branch}}
          # Create version tags from git tags (v1.0.0 -> 1.0.0)
          type=semver,pattern={{version}}
          # Create major.minor tags (v1.2.3 -> 1.2)
          type=semver,pattern={{major}}.{{minor}}
          # Create major tags (v1.2.3 -> 1)
          type=semver,pattern={{major}}
          # Add commit SHA as tag for traceability
          type=sha,prefix={{branch}}-,suffix=-{{date 'YYYYMMDD'}}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
        subject-digest: ${{ steps.build.outputs.digest }}
        push-to-registry: true